From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: "georgijpronuk@gmail.com" <georgijpronuk@gmail.com>
Date: Wed, 7 Jun 2023 21:22:52 +0300
Subject: [PATCH] editMeta with type check


diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java
index ac2967eac165d74c8ee7e0e9ac63124a10851a0e..e29f9093fb4e5335f31ef9a097aa930c61346a58 100644
--- a/src/main/java/org/bukkit/inventory/ItemStack.java
+++ b/src/main/java/org/bukkit/inventory/ItemStack.java
@@ -577,6 +577,29 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, net.kyor
         }
         return false;
     }
+
+    /**
+     * Edits the {@link ItemMeta} of this stack.
+     * <p>
+     * The {@link java.util.function.Consumer} must only interact
+     * with this stack's {@link ItemMeta} through the provided {@link ItemMeta} instance.
+     * Calling this method or any other meta-related method of the {@link ItemStack} class
+     * (such as {@link #getItemMeta()}, {@link #addItemFlags(ItemFlag...)}, {@link #lore()}, etc.)
+     * from inside the consumer is disallowed and will produce undefined results or exceptions.
+     * </p>
+     * @param metaClass - meta class
+     * @param consumer the meta consumer
+     * @return {@code true} if the edit was successful, {@code false} otherwise
+     * @param <M> meta type
+     */
+
+    public <M extends ItemMeta> boolean editMeta(final @NotNull Class<M> metaClass, final @NotNull java.util.function.Consumer<M> consumer) {
+        final ItemMeta meta = this.getItemMeta();
+        if(!metaClass.isInstance(meta)) return false;
+        consumer.accept(metaClass.cast(meta));
+        this.setItemMeta(meta);
+        return true;
+    }
     // Paper end
 
     /**
